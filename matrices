// public class lab2matrices {

//     public static Object matrixMultiply(int[][] A, int[][] B) {
//         // Get the dimensions of the matrices
//         int rowsA = A.length;
//         int colsA = (rowsA > 0) ? A[0].length : 0;
//         int rowsB = B.length;
//         int colsB = (rowsB > 0) ? B[0].length : 0;

//         // Check if multiplication is possible
//         if (colsA != rowsB) {
//             return false; // Multiplication not possible
//         }

//         // Initialize the result matrix
//         int[][] result = new int[rowsA][colsB];

//         // Perform matrix multiplication
//         for (int i = 0; i < rowsA; i++) {
//             for (int j = 0; j < colsB; j++) {
//                 for (int k = 0; k < colsA; k++) {
//                     result[i][j] += A[i][k] * B[k][j];
//                 }
//             }
//         }

//         return result; // Return the resulting matrix
//     }

//     public static void main(String[] args) {
//         int[][] A = {
//             {1, 2, 3},
//             {4, 5, 6}
//         };

//         int[][] B = {
//             {7, 8},
//             {9, 10},
//             {11, 12}
//         };

//         Object product = matrixMultiply(A, B);
//         if (product instanceof Boolean && (Boolean) product == false) {
//             System.out.println("Multiplication not possible");
//         } else {
//             System.out.println("Product of A and B:");
//             int[][] result = (int[][]) product;
//             for (int[] row : result) {
//                 for (int value : row) {
//                     System.out.print(value + " ");
//                 }
//                 System.out.println();
//             }
//         }
//     }
// }



public class lab2matrices {

    public static void main(String[] args) {
        int[][] A = {
            {1, 2, 3},
            {4, 5, 6}
        };

        int[][] B = {
            {7, 8},
            {9, 10},
            {11, 12}
        };

        int[][] product = matrixMultiply(A, B);
        
        if (product == null) {
            System.out.println("Multiplication not possible");
        } else {
            System.out.println("Product of A and B:");
            printMatrix(product);
        }
    }

    public static int[][] matrixMultiply(int[][] A, int[][] B) {
        // Get the dimensions of the matrices
        int rowsA = A.length;
        int colsA = A[0].length;
        int rowsB = B.length;
        int colsB = B[0].length;

        // Check if multiplication is possible
        if (colsA != rowsB) {
            return null; // Multiplication not possible
        }

        // Initialize the result matrix
        int[][] result = new int[rowsA][colsB];

        // Perform matrix multiplication
        for (int i = 0; i < rowsA; i++) {
            for (int j = 0; j < colsB; j++) {
                for (int k = 0; k < colsA; k++) {
                    result[i][j] += A[i][k] * B[k][j];
                }
            }
        }

        return result; // Return the resulting matrix
    }

    public static void printMatrix(int[][] matrix) {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }
    }
}
